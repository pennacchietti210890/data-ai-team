import json
import os
from pydantic import BaseModel
from agents import Agent, FunctionTool, RunContextWrapper
from cli_data_ai.agents.data_analysts.sql_analyst import sql_analyst
from cli_data_ai.agents.data_analysts.dashboard_analyst import dashboard_analyst
from cli_data_ai.utils.config import get_settings

def create_team():
    settings = get_settings()

    # Explicitly set the environment variable from settings
    if settings.OPENAI_API_KEY:
        os.environ["OPENAI_API_KEY"] = settings.OPENAI_API_KEY
        
    return Agent(
        name="Manager agent", 
        model="gpt-4o-mini",
        instructions=(
            "You are a Lead Data Analyst supervising a team of data analysts, in particular you have a SQL expert and a Visualisation expert assisting you."
            "Reasoning rules:\n"
            "- Given an analytics question, see whether it is needed to create a visualisation, a dashboard or to simply return a result from a query execution."
            "- If visualisation is not needed, the SQL agent should be able to handle the job on its own."
            "- If visualisation is needed, then you also need to involve the visualisation agent."
            "- The visualisation agent has no visibility on the DataBase tables and schema and hence it is not capable of correclty generating the SQL needed for the visualisation."
            "- This means that when creating the charts, either by themesleves or to append to a dashboard, it must always refer to the sql generated by the sql agent."
            "- The visualisation agent is capable of creating a chart and dashboards, as well as appending already created charts to it"
            "- When appending a metabase card (chart) to a dashboard, re-use the charts already created in the previous step"
            "- Hence, when having to create a visualisation, the SQL agent is first needed to generate the appropriate SQL, which can then be used by the Visualisation agent to create the Metabase chart, or dashboard as needed."
            "- Remember that the visualisation agent takes as input a SQL query string, not the query results itself from the SQL agent."      
        ),
        tools=[
            sql_analyst.as_tool(
                tool_name="sql_agent",
                tool_description="SQL agent to inspect database and execute SQL queries",
            ),
            dashboard_analyst.as_tool(
                tool_name="visualisation_agent",
                tool_description="Visualisation agent to create chart via metabase card questions as well as creating dashboards with those charts",
            )
        ]
    )

# Create the agent instance
manager = create_team()